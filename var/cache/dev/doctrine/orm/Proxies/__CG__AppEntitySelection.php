<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Selection extends \App\Entity\Selection implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'date_start', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'date_end', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'address', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'post_code', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'candidates', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'status'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'date_start', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'date_end', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'address', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'post_code', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'candidates', '' . "\0" . 'App\\Entity\\Selection' . "\0" . 'status'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Selection $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', []);

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart(\DateTimeInterface $date_start): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', [$date_start]);

        return parent::setDateStart($date_start);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnd(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnd', []);

        return parent::getDateEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnd(\DateTimeInterface $date_end): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnd', [$date_end]);

        return parent::setDateEnd($date_end);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress(string $address): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostCode(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostCode', []);

        return parent::getPostCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostCode(int $post_code): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostCode', [$post_code]);

        return parent::setPostCode($post_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(string $city): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidates(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidates', []);

        return parent::getCandidates();
    }

    /**
     * {@inheritDoc}
     */
    public function addCandidate(\App\Entity\Candidate $candidate): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCandidate', [$candidate]);

        return parent::addCandidate($candidate);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCandidate(\App\Entity\Candidate $candidate): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCandidate', [$candidate]);

        return parent::removeCandidate($candidate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $status): \App\Entity\Selection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

}
